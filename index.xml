<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development and Analytics Blog</title>
    <link>http://kirillpavlov.com/</link>
    <description>Recent content on Development and Analytics Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Sep 2019 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="http://kirillpavlov.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Promo &amp; Referral links</title>
      <link>http://kirillpavlov.com/referrals/</link>
      <pubDate>Sun, 15 Sep 2019 00:00:00 +0800</pubDate>
      
      <guid>http://kirillpavlov.com/referrals/</guid>
      <description>Services I&amp;rsquo;m happy to recommend:
Neat - Easy banking for your business in Hong Kong. Accounting services come on top. Good for newly established firms.
Tinkoff - Amazing virtual bank experience.
Drimsim - great sim card for travelers. Cheap roaming everywhere.
Uber - Invitation Code: kirillp145ue</description>
    </item>
    
    <item>
      <title>From zero to four: how to get top machine learning badge on HackerRank</title>
      <link>http://kirillpavlov.com/blog/2016/09/27/from-zero-to-four-how-to-get-top-machine-learning-badge-on-hackerrank/</link>
      <pubDate>Tue, 27 Sep 2016 08:06:30 +0800</pubDate>
      
      <guid>http://kirillpavlov.com/blog/2016/09/27/from-zero-to-four-how-to-get-top-machine-learning-badge-on-hackerrank/</guid>
      <description>HackerRank is a company that focuses on competitive programming challenges. Compared to TopCoder or Codeforces it covers more software engineering areas, e.g. machine learning and functional programming. The company offers two types of challenges: contests and domain competitions. First requires to solve as many tasks as possible during given time frame, while second counts points for every solved problem regardless time. To drive competition among the users, HackerRank gives medals for good results in contests and badges for achievements in domain competitions.</description>
    </item>
    
    <item>
      <title>Lookup table maintenance in Hive</title>
      <link>http://kirillpavlov.com/blog/2016/09/10/lookup-table-maintenance-in-hive/</link>
      <pubDate>Sat, 10 Sep 2016 20:15:41 +0800</pubDate>
      
      <guid>http://kirillpavlov.com/blog/2016/09/10/lookup-table-maintenance-in-hive/</guid>
      <description>A lookup table is a translation table, aimed to enrich and extend base data. Such tables are very common, especially in data warehousing (schema normalisation) and business analytics area. Usually, they are updated manually and developers are constantly looking for the ways to simplify maintenance.
This article shows how to work with lookup tables in Hive using National Hockey League open data.
Data Let&amp;rsquo;s consider the following example: base table consists of San Jose Sharks 2016-2017 NHL season schedule.</description>
    </item>
    
    <item>
      <title>Beyond traditional join with Apache Spark</title>
      <link>http://kirillpavlov.com/blog/2016/04/23/beyond-traditional-join-with-apache-spark/</link>
      <pubDate>Sat, 23 Apr 2016 09:40:05 +0800</pubDate>
      
      <guid>http://kirillpavlov.com/blog/2016/04/23/beyond-traditional-join-with-apache-spark/</guid>
      <description>An [SQL join](https://en.wikipedia.org/wiki/Join_(SQL)) clause combines records from two or more tables. This operation is very common in data processing and understanding of what happens under the hood is important. There are several common join types: INNER, LEFT OUTER, RIGHT OUTER, FULL OUTER and CROSS or CARTESIAN.
 Join which uses the same table is a self-join. If an operation uses equality operator, it is [equi-join](https://en.wikipedia.org/wiki/Join_(SQL)#Equi-join), otherwise, it is non-equi-join.</description>
    </item>
    
    <item>
      <title>Immutable heap implementation in Scala</title>
      <link>http://kirillpavlov.com/blog/2016/02/28/immutable-heap-implementation-in-scala/</link>
      <pubDate>Sun, 28 Feb 2016 21:32:38 +0800</pubDate>
      
      <guid>http://kirillpavlov.com/blog/2016/02/28/immutable-heap-implementation-in-scala/</guid>
      <description>Current [Heap](https://en.wikipedia.org/wiki/Heap_(data_structure)) implementation in Scala (PriorityQueue) is mutable. It means that after heap manipulation, the previous state is no longer accessible. This article describes immutable heap construction based on Scala Vector.
First of all, we need to define an interface to the Heap. It should have insert and extract methods. As far as designed data structure should be immutable, both methods should return the whole heap in addition to expected result.</description>
    </item>
    
    <item>
      <title>How to update your maven</title>
      <link>http://kirillpavlov.com/blog/2016/02/22/how-to-update-your-maven/</link>
      <pubDate>Mon, 22 Feb 2016 20:09:47 +0800</pubDate>
      
      <guid>http://kirillpavlov.com/blog/2016/02/22/how-to-update-your-maven/</guid>
      <description>Maven is a popular build manager in java world. It is used to build Apache Spark, for example. Here is correct deb repository with latest version:
sudo apt-get purge maven maven2 maven3 sudo apt-add-repository ppa:andrei-pozolotin/maven3 sudo apt-get update sudo apt-get install maven3  Version available at the time of writing is 3.3.9.</description>
    </item>
    
    <item>
      <title>Top 5 features released in spark 1.6</title>
      <link>http://kirillpavlov.com/blog/2016/02/21/top-5-features-released-in-spark-1.6/</link>
      <pubDate>Sun, 21 Feb 2016 00:20:45 +0800</pubDate>
      
      <guid>http://kirillpavlov.com/blog/2016/02/21/top-5-features-released-in-spark-1.6/</guid>
      <description>Spark version 1.6 has been released on January 4th, 2016. Compared to the previous version, it has significant improvements. This article covers top 5 of them.
1. Partition by column The idea is to have more control on RDD&amp;rsquo;s partitioning. Sometimes data needs to be joined and grouped by certain key, such as user_id. To minify data reshuffling, one may possible to store chunks of objects with the same key within the same data node.</description>
    </item>
    
    <item>
      <title>Go versions, how to make updates easier</title>
      <link>http://kirillpavlov.com/blog/2016/02/20/go-versions-how-to-make-updates-easier/</link>
      <pubDate>Sat, 20 Feb 2016 23:06:18 +0800</pubDate>
      
      <guid>http://kirillpavlov.com/blog/2016/02/20/go-versions-how-to-make-updates-easier/</guid>
      <description>Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.
Because of its rapid development, there is an issue with version updates. It requires not only download and compile new version, but also update $GOROOT and $GOPATH environment variables.
One way to simplify this process is to use version manager, such as gvm. Installations process is super easy:
bash &amp;lt; &amp;lt;(curl -s -S -L https://raw.</description>
    </item>
    
    <item>
      <title>Get random lines from file with bash</title>
      <link>http://kirillpavlov.com/blog/2015/08/27/get-random-lines-from-file-with-bash/</link>
      <pubDate>Thu, 27 Aug 2015 06:18:14 +0000</pubDate>
      
      <guid>http://kirillpavlov.com/blog/2015/08/27/get-random-lines-from-file-with-bash/</guid>
      <description>Data sampling is one of the duties of data scientists and data engineers. One may require to split original data into train and test subsets. How could we do it fast with less amount of code? This article shows usage of different command line tools for such task.
There are several ways to get random lines from a file:
 Sort lines with random key shuf from GNU core utils rl randomize-lines package perl one-liner python one-liner  All of the approaches would be compared in terms of execution time, tools availability and code complexity.</description>
    </item>
    
    <item>
      <title>Static site generator for personal blog</title>
      <link>http://kirillpavlov.com/blog/2015/08/22/static-site-generator-for-personal-blog/</link>
      <pubDate>Sat, 22 Aug 2015 23:31:19 +0800</pubDate>
      
      <guid>http://kirillpavlov.com/blog/2015/08/22/static-site-generator-for-personal-blog/</guid>
      <description>Many of us would like to have personal identity in the Internet, write blog, share pictures, code and discuss interesting topics. For tech related articles social networks would not be enought and we should look for personal blog or website solution. Here I would like to explain some ideas behing my choice &amp;ndash; hugo, static site generator written in Go.
First of all, let us write down requirements for personal page:</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>http://kirillpavlov.com/about/</link>
      <pubDate>Sun, 09 Aug 2015 16:20:37 +0800</pubDate>
      
      <guid>http://kirillpavlov.com/about/</guid>
      <description>Hi! My name is Kirill Pavlov, I&amp;rsquo;m a data scientist and software engeneer. While I&amp;rsquo;m working on content update, check out my CV, github resume, hackerrank and kaggle.
Some of the longer articles from this blog are duplicated at my medium channel.
My PGP key is on keybase.
I am also doing project Euler tasks, you could track the progress here: My name My first name is &amp;ldquo;Kirill&amp;rdquo; and my last name is &amp;ldquo;Pavlov&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>