<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Kirill Pavlov</title>
    <link>http://kirillpavlov.com/categories/bash/</link>
    <description>Recent content in Bash on Kirill Pavlov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Aug 2015 06:18:14 +0000</lastBuildDate>
    
	<atom:link href="http://kirillpavlov.com/categories/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Get random lines from file with bash</title>
      <link>http://kirillpavlov.com/blog/2015/08/27/get-random-lines-from-file-with-bash/</link>
      <pubDate>Thu, 27 Aug 2015 06:18:14 +0000</pubDate>
      
      <guid>http://kirillpavlov.com/blog/2015/08/27/get-random-lines-from-file-with-bash/</guid>
      <description>Data sampling is one of the duties of data scientists and data engineers. One may require to split original data into train and test subsets. How could we do it fast with less amount of code? This article shows usage of different command line tools for such task.
There are several ways to get random lines from a file:
 Sort lines with random key shuf from GNU core utils rl randomize-lines package perl one-liner python one-liner  All of the approaches would be compared in terms of execution time, tools availability and code complexity.</description>
    </item>
    
  </channel>
</rss>